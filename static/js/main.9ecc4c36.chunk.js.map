{"version":3,"sources":["assets/energyshield.svg","assets/imageshield.png","assets/lineshield.svg","components/AssetLibrary.tsx","components/Paper.tsx","components/PropertiesPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AssetLib","useState","id","alt","src","energyshield","imageshield","lineshield","assetList","setAssetList","draggedAssetIndex","setDraggedAssetIndex","startDrag","e","assetRect","currentTarget","getBoundingClientRect","dataTransfer","setData","JSON","stringify","mouseOffset","x","pageX","y","pageY","i","length","switchPlaces","draggedAsset","currentIndex","newAssetList","className","map","asset","draggable","onDragStart","onDragOver","Paper","onInstanceSelection","titlePlaceholder","textPlaceholder","title","setTitle","text","setText","assetInstanceList","setAssetInstanceList","titleClassName","textClassName","onDrop","preventDefault","parse","getData","pageRect","newAssetInstance","Date","now","name","width","height","contentEditable","onFocus","onBlur","content","innerHTML","dangerouslySetInnerHTML","__html","onClick","undefined","instance","style","left","top","PropertiesPanel","App","selectedInstance","setSelectedInstance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ecc4c36.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/energyshield.bce9f0c3.svg\";","export default __webpack_public_path__ + \"static/media/imageshield.e2257e67.png\";","export default __webpack_public_path__ + \"static/media/lineshield.bdc375ad.svg\";","import React, { DragEvent, useState } from 'react';\nimport energyshield from '../assets/energyshield.svg';\nimport imageshield from '../assets/imageshield.png';\nimport lineshield from '../assets/lineshield.svg';\nimport { Asset } from '../common/types';\nimport './AssetLib.css';\n  \nfunction AssetLib() {\n  const [assetList, setAssetList] = useState<Asset[]>([\n    {\n      id: \"energyshield\",\n      alt: \"A shield with a thunderbolt\",\n      src: energyshield,\n    },\n    {\n      id: \"imageshield\",\n      alt: \"A shield from a png file\",\n      src: imageshield,\n    },\n    {\n      id: \"lineshield\",\n      alt: \"A shield drawn with lines only\",\n      src: lineshield,\n    }\n  ]);\n  const [draggedAssetIndex, setDraggedAssetIndex] = useState(0);\n\n  const startDrag = (e: DragEvent<HTMLImageElement>) => {\n    const assetRect = e.currentTarget.getBoundingClientRect();\n\n    e.dataTransfer.setData(\n      \"asset\",\n      JSON.stringify({\n        id: e.currentTarget.id,\n        src: e.currentTarget.src,\n        mouseOffset: { x: e.pageX - assetRect.x, y: e.pageY - assetRect.y }\n      })\n    );\n\n    for(let i = 0; i < assetList.length; i++) {\n      if (assetList[i].id == e.currentTarget.id) {\n        setDraggedAssetIndex(i);\n        break;\n      }\n    };\n  }\n\n  const switchPlaces = (e: DragEvent) => {\n    const draggedAsset = assetList[draggedAssetIndex];\n    if (e.currentTarget.id !== draggedAsset.id) {\n      let currentIndex = 0;\n      for(let i = 0; i < assetList.length; i++) {\n        if (assetList[i].id === e.currentTarget.id) {\n          currentIndex = i;\n          break;\n        }\n      };\n      let newAssetList = [...assetList];\n      newAssetList[draggedAssetIndex] = assetList[currentIndex];\n      newAssetList[currentIndex] = assetList[draggedAssetIndex];\n      setDraggedAssetIndex(currentIndex);\n      setAssetList(newAssetList);\n    }\n  }\n\n  return (\n    <div className=\"assetlib\">\n      <div className=\"assetlist\">\n        {assetList.map(asset =>\n          <img\n            id={asset.id}\n            key={asset.id}\n            alt={asset.alt}\n            src={asset.src}\n            className=\"asset\"\n            draggable=\"true\"\n            onDragStart={startDrag}\n            onDragOver={switchPlaces}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AssetLib;\n","import React, { DragEvent, FocusEvent, useState } from 'react';\nimport { AssetInstance } from '../common/types';\nimport './Paper.css';\n\ninterface Props {\n  onInstanceSelection(arg0: AssetInstance|undefined): void;\n}\n\nfunction Paper({ onInstanceSelection }: Props) {\n  const titlePlaceholder = \"Add your title here\";\n  const textPlaceholder = \"Add your text here\";\n  const [title, setTitle] = useState(titlePlaceholder);\n  const [text, setText] = useState(textPlaceholder);\n  const [assetInstanceList, setAssetInstanceList] = useState<AssetInstance[]>(\n    []\n  );\n\n  const titleClassName = title === titlePlaceholder ? \"placeholder\" : \"\";\n  const textClassName = text === textPlaceholder ? \"placeholder\" : \"\";\n\n  const removeTitlePlaceholder = () => {\n    if (title === titlePlaceholder) {\n      setTitle(\"\");\n    }\n  };\n\n  const addTitlePlaceholderIfEmpty = (e: FocusEvent<HTMLHeadingElement>) => {\n    const content = e.currentTarget.innerHTML;\n    if (content) {\n      setTitle(content);\n    } else {\n      setTitle(titlePlaceholder);\n    }\n  };\n  const removeTextPlaceholder = () => {\n    if (text === textPlaceholder) {\n      setText(\"\");\n    }\n  };\n\n  const addTextPlaceholderIfEmpty = (e: FocusEvent<HTMLParagraphElement>) => {\n    const content = e.currentTarget.innerHTML;\n    if (content) {\n      setText(content);\n    } else {\n      setText(textPlaceholder);\n    }\n  };\n\n  const drop = (e: DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const asset = JSON.parse(e.dataTransfer.getData(\"asset\"));\n    const pageRect = e.currentTarget.getBoundingClientRect();\n    const newAssetInstance = {\n      id: `${asset.id}${Date.now()}`,\n      src: asset.src,\n      name: `${asset.id}_${assetInstanceList.length}`,\n      x: e.pageX - pageRect.x - asset.mouseOffset.x,\n      y: e.pageY - pageRect.y - asset.mouseOffset.y,\n      width: 120,\n      height: 120,\n    };\n    setAssetInstanceList([...assetInstanceList, newAssetInstance]);\n  };\n\n  const allowDrop = (e: DragEvent) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"paper\" onDrop={drop} onDragOver={allowDrop}>\n      <h1\n        className={titleClassName}\n        contentEditable=\"true\"\n        onFocus={removeTitlePlaceholder}\n        onBlur={addTitlePlaceholderIfEmpty}\n        dangerouslySetInnerHTML={{ __html: title }}\n        onClick={() => onInstanceSelection(undefined)}\n      ></h1>\n      <p\n        className={textClassName}\n        contentEditable=\"true\"\n        onFocus={removeTextPlaceholder}\n        onBlur={addTextPlaceholderIfEmpty}\n        dangerouslySetInnerHTML={{ __html: text }}\n        onClick={() => onInstanceSelection(undefined)}\n      ></p>\n      {assetInstanceList.map((instance) => {\n        return (\n          <img\n            key={instance.name}\n            src={instance.src}\n            className=\"instance\"\n            style={{\n              left: instance.x,\n              top: instance.y,\n              width: instance.width,\n              height: instance.height,\n            }}\n            contentEditable=\"true\"\n            onClick={() => onInstanceSelection(instance)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Paper;\n","import React from 'react';\nimport { AssetInstance } from '../common/types';\nimport './PropertiesPanel.css';\n\ninterface Props {\n  instance?: AssetInstance;\n}\n  \nfunction PropertiesPanel({instance}: Props) {\n  if (!instance) {\n    return <></>\n  }\n  \n  return (\n    <div className=\"panel\">\n      <h4>{instance.name}</h4>\n      <table>\n        <tr>\n          <td>x:</td>\n          <td>{instance.x}</td>\n        </tr>\n        <tr>\n          <td>y:</td>\n          <td>{instance.y}</td>\n        </tr>\n        <tr>\n          <td>width:</td>\n          <td>{instance.width}</td>\n        </tr>\n        <tr>\n          <td>height:</td>\n          <td>{instance.height}</td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n\nexport default PropertiesPanel;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { AssetInstance } from './common/types';\nimport AssetLib from './components/AssetLibrary';\nimport Paper from './components/Paper';\nimport PropertiesPanel from './components/PropertiesPanel';\n\nfunction App() {\n  const [selectedInstance, setSelectedInstance] = useState<AssetInstance>();\n\n  const onInstanceSelection = (instance: AssetInstance|undefined) => {\n    setSelectedInstance(instance);\n  }\n\n  return (\n    <div className=\"App\">\n      <AssetLib />\n      <Paper onInstanceSelection={onInstanceSelection} />\n      {selectedInstance &&\n        <PropertiesPanel instance={selectedInstance} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}